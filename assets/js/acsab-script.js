/** * Created by Richard on 19/09/2016. *///console.log('ACSAB');ACSAB = {    common: {        init: function () {            'use strict';            //uncomment to debug            //console.log('acsab common');            //add js class            jQuery('body').addClass('js');            jQuery('body').addClass('acsab-init');        }    },    page: {        init: function () {            //uncomment to debug            //console.log('pages');        }    },    post: {        init: function () {            //uncomment to debug            //console.log('posts');        }    },    fn:{        actDefer: function(successMethod, failMethod, testMethod, pause, attempts) {            var defTest = function () {                if (typeof jQuery !== 'undefined') {                    return true                }                return false;            };            //What to do if test is false            var  defFail = function () {                console.log('The deftest failed');            }            //What to do if test is true            var  defSuccess = function () {                console.log('The deftest passed');            }            attempts = (attempts === undefined)? false : attempts;            pause = (pause === undefined)? 50 : pause;            testMethod = (testMethod === undefined)? defTest : testMethod;            failMethod = (failMethod === undefined)? defFail : failMethod;            successMethod = (successMethod === undefined)? defSuccess : successMethod;            if (testMethod()) {                console.log('the testmethod')                successMethod();            } else {                console.log('the failmethod')                failMethod();                if(attempts === false || attempts > 0) {                    setTimeout(function () {                        attempts = (attempts === false )? attempts : attempts - 1;                        ACSAB.fn.actDefer(successMethod, failMethod, testMethod, pause, attempts)                    }, pause);                }            }        }    },    settings: {        active: true    }};ACSABUTIL = {    exec: function (template, handle) {        var ns = ACSAB,            handle = (handle === undefined) ? "init" : handle;        if (template !== '' && ns[template] && typeof ns[template][handle] === 'function') {            ns[template][handle]();        }    },    init: function () {        var body = document.body,            template = body.getAttribute('data-post-type'),            handle = body.getAttribute('data-post-slug');        ACSABUTIL.exec('common');        ACSABUTIL.exec(template);        ACSABUTIL.exec(template, handle);    }};jQuery(window).load(ACSABUTIL.init);